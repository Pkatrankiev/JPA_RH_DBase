package ManagementBasicClassTable;

import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;
import java.util.*;

public class HelpWindow extends JDialog {
	
	private static final long serialVersionUID = 1L;
	public static String text = 
	          "Това е модулът, чрез който може да добавяте нови методи в базата.\n"
	          + "Съдържа таблица с всички методи използвани до момента в базата.\n"
	          + "Методи могат само да се добавят.\n"
	          + "#НЕМОЖЕТЕ ДА ТРИЕТЕ ВЕЧЕ ЗАПИСАНИ В БАЗАТА МЕТОДИ.&\n"
	          + "\n"
	          + "Таблицата съдържа 8 колони.\n"
	          + "#1. Код:& Това е индификацията на метода в базата. Задължителни са първите символи в кода (М.ЛИ-РХ-15) те не могат да се променят. Може да промените текста след кода на метода, кликайки с левия бутон на мишката върху името в тази колона. Появява се допълнителен прозорец в който може да редактирате текста. С бутона #„OK”& запазвате промените и затваряте този прозорец. С #„Cancel”& затваряте прозореца без промени. Кода на метода трябва да бъде уникален. Когато въведете повтарящ се код се появява прозорец с предупреждение и ви връща отново да въведете друг код за метода.\n"
	          + "#2. Описание:& Това е текстово поле описващо метода. Може да редактирате текста директно в клетката от таблицата кликайки два пъти с левия бутон на мишката върху текста в тази колона.\n"
	          + "#3. В акредитация:& В тази колона маркирате дали метода е в обхвата на акредитацията. Променяте състоянието на маркера чрез кликане с левия бутон на мишката в квадратчето. Когато има тикче – метода е в акредитация.\n"
	          + "#4. Активен:& В тази колона маркирате дали метода е активен. Когато работите с базата и трябва да избирате метод по който се анализират проби в падащото меню за избор на метод ще се показват само активните методи. Когато има тикче – метода е активен.\n"
	          + "#5. Поредност в Протокола:& В полетата от тази колона може да опишете последователността в която ще се поредят резултатите, когато пробите в протокола се анализират по множество методи. Редактирането на числото правите директно в клетката от таблицата, кликайки два пъти с левия бутон на мишката в клетката. Съблюдавайте да няма повтарящи се числа и максималното число да е не по голямо от броя на активните методи.\n"
	          + "#6. Тип емисия:& Тази колона показва типа излъчване на нуклидите в метода. Променяте типа чрез падащо меню кликайки с левия бутон на мишката в клетката. Не можете да променяте това поле на вече записан ред (метод) в базата.\n"
	          + "#7. Списък с нуклиди за добив:& В тази колона избирате набора от нуклиди, които  се използват за определяне на добив в този метод. Кликайки с левия бутон на мишката в клетката се появява допълнителен прозорец,  чрез който може да изберете необходимите нуклиди. В този прозорец имате едно над друго полета в които чрез падащо меню избирате неоходимите нуклиди. Броя на тези полета, респективно броя на нуклидиде, може да увеличите с бутона #„+”& или да намалите с бутона #„-”&. Максималния брой нуклиди за добив, който може да изберете е 7. С бутона #„ОК”& запазвате избора и затваряте този прозорец. С бутона #„Изход”& затваряте този прозорец без промяна. Не можете да променяте това поле на вече записан ред (метод) в базата.\n"
	          + "#8. Списък с показатели:& В тази колона избирате набора от показатели, по които  се анализират пробите в този метод. Кликайки с левия бутон на мишката в клетката се появява допълнителен прозорец,  чрез който може да изберете необходимите показатели. В този прозорец имате едно над друго полета в които чрез падащо меню избирате неоходимите показатели. Броя на тези полета, респективно броя на показатели, може да увеличите с бутона #„+”& или да намалите с бутона #„-”&. Максималния брой полета, който може да изберете е 7. С бутона #„ОК”& запазвате избора и затваряте този прозорец. С бутона #„Изход”& затваряте този прозорец без промяна. Не можете да променяте това поле на вече записан ред (метод) в базата.\n"
	          + "\n"
	          + "Може да подреждате редовете в таблицата по всяка една колона, като с левия бутон на мишката кликнета на името на колоната. До името на колоната се появява стрелкичка показваща по коя колона е подредбата и в каква посока е. Под името на колоната има активно поле със стрелка в дясно. Кликайки с левия бутон на мишката върху тази стрелка се показва падащо меню със списък на всички елементи в тази колона. По този начи може да покажете само редове от таблицата с избрания от падащото меню елемент.\n"
	          + "\n"
	          + "Когато стъпите на даден ред, той се оцветява в жълто. Това е активния ред (метод).\n"
	          + "\n"
	          + "Когато има промяна в някои от елементите на даден ред(метод), той се оцветява в синьо, за да покаже че там има промени коите ще се запишат при натискане на бутона #„Запис”&.\n"
	          + "\n"
	          + "Най отдолу са следните бутони:\n"
	          + "#1. Нов Ред& с този бутон добавяте нов ред (нов метод) в таблицата. Задължително е да бъде маркиран ред (метод) от таблицата. Този бутон е неактивен когато няма маркиран ред. Когато натиснете бутона се добавя нов ред (нов метод) в таблицата дублиращ маркирания ред. Новия ред е оцветен в червено и  остава така докато не се запише в базата.\\n \r\n"
	          + "#2. Изтр. Ред& с този бутон триете маркирания ред (метод) от таблицата. Може да триете само ново добавените редове (тези които са в червено). Когато е маркиран ред, който не е нов, бутона е неактивен.\n"
	          + "#3. Export& с този бутон генерираме ексел файл с данните от таблицата.\n"
	          + "#4. Запис& с този бутон правим запис на променените и новите редове (методи) в базата. Записаните в базата методи не могат да се трият. Могат само да се редактират. Бутона се показва само когато сте се логнали като администратор, преди да влезете в меню #„Списък методи”&.\n"
	          + "#5. Изход& с този бутон затваряме прозореца и излизаме без да правим промени.\n"
	          + "";
	
	
	public HelpWindow(JFrame parent, String labelString) {
		
		super(parent, labelString, true);
				
		
    try {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
    } catch (Exception evt) {}
  
    final JDialog f = new JDialog();
    
    // Create the StyleContext, the document and the pane
    StyleContext sc = new StyleContext();
    final DefaultStyledDocument doc = new DefaultStyledDocument(sc);
    final JTextPane pane = new JTextPane(doc);
    
    // Create and add the main document style
    Style defaultStyle = sc.getStyle(StyleContext.DEFAULT_STYLE);
    final Style mainStyle = sc.addStyle("MainStyle", defaultStyle);
    StyleConstants.setLeftIndent(mainStyle, 16);
    StyleConstants.setRightIndent(mainStyle, 16);
    StyleConstants.setFirstLineIndent(mainStyle, 16);
    StyleConstants.setFontFamily(mainStyle, "Times New Roman");
    StyleConstants.setFontSize(mainStyle, 16);

    // Create and add the constant width style
    final Style boldStyle = sc.addStyle("Heading2", null);
    StyleConstants.setForeground(boldStyle, Color.black);
    StyleConstants.setFontSize(boldStyle, 16);
    StyleConstants.setFontFamily(boldStyle, "Times New Roman");
    StyleConstants.setBold(boldStyle, true);
    StyleConstants.setLeftIndent(boldStyle, 8);
    StyleConstants.setFirstLineIndent(boldStyle, 0);
   
    Integer[][] masive = extracMasiveDubleForBoldSimbols();
    try {
            // Set the logical style
            doc.setLogicalStyle(0, mainStyle);

            // Add the text to the document
            doc.insertString(0, text, null);

            // Apply the character attributes
            for (int i = 0; i < masive.length; i++) {
			 doc.setCharacterAttributes(masive[i][0], masive[i][1], boldStyle, false);
            }

            // Set the foreground color and change the font
            pane.setForeground(Color.black);
            pane.setFont(new Font("Times New Roman", Font.PLAIN, 24));
          } catch (BadLocationException e) {
          }


    getContentPane().add(new JScrollPane(pane));
    setSize(400, 300);
    setLocationRelativeTo(null);
    f.setLocationRelativeTo(parent);
    setVisible(true);


	}


	private Integer[][] extracMasiveDubleForBoldSimbols() {
		ArrayList<String> list = new ArrayList<String>();
		int start, end;
		
   do {
		start = text.indexOf("#");
		if(start>0) {
		text = text.replaceFirst("#","");
		
		}
		end = text.indexOf("&");
		if(end>0) {
		text = text.replaceFirst("&","");
		
		}
		if(start>0 && end >0) {
			list.add(start+","+(end-start));
			System.out.println(start+","+(end-start));
		}
   } while (end>0); 
		
  Integer[][]  masive = new Integer[list.size()][2];
   int k = 0;
  for (String strings : list) {
			String[] dub = strings.split(",");
			masive[k][0] = Integer.parseInt(dub[0]);
			masive[k][1] = Integer.parseInt(dub[1]);
			k++;
		}
		return masive;
	}


	
		

}
